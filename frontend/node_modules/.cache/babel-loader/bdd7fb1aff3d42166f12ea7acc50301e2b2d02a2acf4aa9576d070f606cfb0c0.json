{"ast":null,"code":"const BASE_URL = \"http://localhost:5000/api\";\nexport const registerUser = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return res.json();\n};\nexport const loginUser = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return res.json();\n};\nexport const fetchTasks = async token => {\n  const res = await fetch(`${BASE_URL}/tasks`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n};\nexport const addTask = async (token, task) => {\n  const res = await fetch(`${BASE_URL}/tasks`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(task)\n  });\n  return res.json();\n};\nexport const updateTask = async (token, id, data) => {\n  const res = await fetch(`${BASE_URL}/tasks/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n};\nexport const deleteTask = async (token, id) => {\n  const res = await fetch(`${BASE_URL}/tasks/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n};","map":{"version":3,"names":["BASE_URL","registerUser","email","password","res","fetch","method","headers","body","JSON","stringify","json","loginUser","fetchTasks","token","Authorization","addTask","task","updateTask","id","data","deleteTask"],"sources":["C:/Users/dell/Desktop/Stealth/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:5000/api\";\r\n\r\nexport const registerUser = async (email, password) => {\r\n  const res = await fetch(`${BASE_URL}/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const loginUser = async (email, password) => {\r\n  const res = await fetch(`${BASE_URL}/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const fetchTasks = async (token) => {\r\n  const res = await fetch(`${BASE_URL}/tasks`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const addTask = async (token, task) => {\r\n  const res = await fetch(`${BASE_URL}/tasks`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n    body: JSON.stringify(task),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const updateTask = async (token, id, data) => {\r\n  const res = await fetch(`${BASE_URL}/tasks/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const deleteTask = async (token, id) => {\r\n  const res = await fetch(`${BASE_URL}/tasks/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;IACnDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,aAAa,EAAE;IAChDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,EAAE;IAC3CO,OAAO,EAAE;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG,MAAAA,CAAOF,KAAK,EAAEG,IAAI,KAAK;EAC5C,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,EAAE;IAC3CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG,CAAC;IACjFN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOb,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOJ,KAAK,EAAEK,EAAE,EAAEC,IAAI,KAAK;EACnD,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,UAAUmB,EAAE,EAAE,EAAE;IACjDb,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG,CAAC;IACjFN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOhB,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAAA,CAAOP,KAAK,EAAEK,EAAE,KAAK;EAC7C,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,UAAUmB,EAAE,EAAE,EAAE;IACjDb,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}